x-environment-defaults: &environment-defaults
  DEBUG: "True"
  DB_NAME: "mental-services"
  DB_USER: "postgres"
  DB_PASSWORD: "postgres"
  DB_HOST: "postgres-db"
  DB_PORT: 5432
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  SECRET_KEY: "secret"

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mental-services
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql
    networks:
      - mental-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mental-app:
    build:
      context: .
    command: >
      sh -c "sleep 5 &&
             python manage.py migrate &&
             python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='root').exists() or User.objects.create_superuser('root', 'root@example.com', 'root')\" &&
             python manage.py collectstatic --no-input &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000 --log-level info --workers 3 --timeout 120"
    ports:
      - "8000:8000"
    networks:
      - mental-network
    depends_on:
      postgres-db:
         condition: service_healthy
    environment:
      <<: *environment-defaults
    volumes:
      - static_volume:/app/static
    restart: on-failure:5

  nginx:
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - "8080:8080"
    networks:
      - mental-network
    depends_on:
      - mental-app

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mental-network

  celery:
    build: 
      context: .
    command: celery -A core worker --loglevel=info
    depends_on:
      - redis
      - postgres-db
    networks:
      - mental-network
    environment:
      <<: *environment-defaults

  celery-beat:
    build: 
      context: .
    command: celery -A core beat --loglevel=info
    depends_on:
      - redis
      - postgres-db
    networks:
      - mental-network
    environment:
      <<: *environment-defaults

volumes:
  pg_data:
  static_volume:

networks:
  mental-network:
    driver: bridge

